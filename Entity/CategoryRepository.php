<?php

namespace Gpupo\CamelSpiderBundle\Entity;

use Doctrine\ORM\EntityRepository,
    Gpupo\CamelSpiderReaderBundle\Entity\InterfaceNode;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends NestedTreeRepository implements InterfaceNode
{
    public function findForMenu()
    {

        return $this->findForList()->getQuery()->getResult();
    }

    public function findForList()
    {
        $qb = $this->createQueryBuilder('e');
        $qb->where('e.parent IS NOT NULL')
            ->add('orderBy', 'e.lft ASC');

        return $qb;
    }

    public function removeAndMoveRelated(Category $removedCategory, $movedCategory)
    {
        // Get children
        $childrens = $this->children($removedCategory);
        $removedIds[] = $removedCategory->getId();
        if (null !== $childrens && false !== $childrens) {
            foreach ($childrens as $node) {
                $removedIds[] = $node->getId();
            }
        }

        // Moving related Subscritions
        $qb1 = $this->getEntityManager()->createQueryBuilder();

        $qb1->update('Gpupo\CamelSpiderBundle\Entity\Subscription s')
            ->set('s.category', '?1')
            ->add('where', $qb1->expr()->in('s.category', '?2'))
            ->setParameter(1, $movedCategory)
            ->setParameter(2, $removedIds)
            ->getQuery()->getResult();

        // Moving related News
        $qb2 = $this->getEntityManager()->createQueryBuilder();
        $qb2->update('Gpupo\CamelSpiderBundle\Entity\News n')
            ->set('n.category', '?1')
            ->add('where', $qb2->expr()->in('n.category', '?2'))
            ->setParameter(1, $movedCategory)
            ->setParameter(2, $removedIds)
            ->getQuery()->getResult();

        $this->getEntityManager()->flush();
        $this->getEntityManager()->remove($removedCategory);
        $this->getEntityManager()->flush();
    }
}
